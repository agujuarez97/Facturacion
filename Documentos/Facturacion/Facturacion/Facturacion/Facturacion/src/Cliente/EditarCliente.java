/**
 * edit client
 * @autor. Komarofky.
 */
package Cliente;

import Avisos.CiudadNoExistente;
import Avisos.dniExisANDIngExis;
import Avisos.dniExistente;
import Avisos.ing_brutosExistente;
import Facturacion.Conexion;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JTextField;

/**
 * @author matias
 */
public class EditarCliente extends javax.swing.JFrame {

    /**
     * Creates new form EditarCliente
     *
     * @throws java.sql.SQLException
     */
    public EditarCliente() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        /*HACE QUE LA PANTALLA SE CENTRE EN EL MEDIO DE LA PANTALLA*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DatosClientes = new javax.swing.JTabbedPane();
        DatosGenerales = new javax.swing.JPanel();
        Cod_Cliente = new javax.swing.JLabel();
        Ecodigo = new javax.swing.JTextField();
        Razon_Social = new javax.swing.JLabel();
        Erazonsocial = new javax.swing.JTextField();
        Nombre_Comercial = new javax.swing.JLabel();
        Enombre = new javax.swing.JTextField();
        TIpo_Dni = new javax.swing.JLabel();
        Etipo_dni = new javax.swing.JComboBox<>();
        Numero_Dni = new javax.swing.JLabel();
        Enumero = new javax.swing.JTextField();
        Categoria_Iva = new javax.swing.JLabel();
        Etipo_iva = new javax.swing.JComboBox<>();
        Ingresos_Brutos = new javax.swing.JLabel();
        Enumero_ingresos = new javax.swing.JTextField();
        Cancelar = new javax.swing.JButton();
        Cond_Venta = new javax.swing.JLabel();
        Econd_venta = new javax.swing.JComboBox<>();
        Guardar1 = new javax.swing.JButton();
        DatosAdicionales = new javax.swing.JPanel();
        Codigo_Postal = new javax.swing.JLabel();
        Ecodigo_postal = new javax.swing.JTextField();
        Telefono_Cliente = new javax.swing.JLabel();
        Etelefono = new javax.swing.JTextField();
        Celular = new javax.swing.JLabel();
        Enumero_celular = new javax.swing.JTextField();
        Mail_Cliente = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        Morosidad_Cliente = new javax.swing.JLabel();
        Emorosidad = new javax.swing.JTextField();
        Limite_Credito = new javax.swing.JLabel();
        Elimite_credito = new javax.swing.JTextField();
        Estado_Cliente = new javax.swing.JLabel();
        Estado = new javax.swing.JComboBox<>();
        Guardar = new javax.swing.JButton();
        Cancelar2 = new javax.swing.JButton();
        direccion = new javax.swing.JLabel();
        Enomdireccion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        DatosClientes.setFont(new java.awt.Font("Bitstream Vera Serif", 1, 30)); // NOI18N

        Cod_Cliente.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Cod_Cliente.setText("CODIGO");
        Cod_Cliente.setPreferredSize(new java.awt.Dimension(199, 24));

        Ecodigo.setEditable(false);
        Ecodigo.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Razon_Social.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Razon_Social.setText("RAZON SOCIAL");
        Razon_Social.setPreferredSize(new java.awt.Dimension(199, 24));

        Erazonsocial.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Nombre_Comercial.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Nombre_Comercial.setText("NOMBRE COMERICAL");

        Enombre.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        TIpo_Dni.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        TIpo_Dni.setText("TIPO DNI");
        TIpo_Dni.setPreferredSize(new java.awt.Dimension(199, 24));

        Etipo_dni.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Etipo_dni.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "CUIT", "CUIL" }));
        Etipo_dni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Etipo_dniActionPerformed(evt);
            }
        });

        Numero_Dni.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Numero_Dni.setText("NUMERO DNI");
        Numero_Dni.setPreferredSize(new java.awt.Dimension(199, 24));

        Enumero.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Categoria_Iva.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Categoria_Iva.setText("CATEGORIA DE IVA");
        Categoria_Iva.setPreferredSize(new java.awt.Dimension(199, 24));

        Etipo_iva.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Etipo_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONSUMIDOR FINAL", "RESPONSABLE INSCRIPTO", "RESPONSABLE MONOTRIBUTO", "SUJETO EXENTO" }));
        Etipo_iva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Etipo_ivaActionPerformed(evt);
            }
        });

        Ingresos_Brutos.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Ingresos_Brutos.setText("INGRESOS BRUTOS");
        Ingresos_Brutos.setPreferredSize(new java.awt.Dimension(199, 24));

        Enumero_ingresos.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Cancelar.setFont(new java.awt.Font("Bitstream Vera Serif", 1, 20)); // NOI18N
        Cancelar.setText("CANCELAR");
        Cancelar.setPreferredSize(new java.awt.Dimension(122, 36));
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        Cond_Venta.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Cond_Venta.setText("COND. VENTA");
        Cond_Venta.setPreferredSize(new java.awt.Dimension(199, 24));

        Econd_venta.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Econd_venta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONTADO", "CUENTA CORRIENTE" }));

        Guardar1.setFont(new java.awt.Font("Bitstream Vera Serif", 1, 20)); // NOI18N
        Guardar1.setText("GUARDAR");
        Guardar1.setPreferredSize(new java.awt.Dimension(122, 36));
        Guardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Guardar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DatosGeneralesLayout = new javax.swing.GroupLayout(DatosGenerales);
        DatosGenerales.setLayout(DatosGeneralesLayout);
        DatosGeneralesLayout.setHorizontalGroup(
            DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosGeneralesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Nombre_Comercial, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(Cod_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Razon_Social, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TIpo_Dni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Numero_Dni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Categoria_Iva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Ingresos_Brutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Cond_Venta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Erazonsocial, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addComponent(Enombre)
                    .addComponent(Ecodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Etipo_dni, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Etipo_iva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Econd_venta, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Enumero_ingresos, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Enumero, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DatosGeneralesLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(Guardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        DatosGeneralesLayout.setVerticalGroup(
            DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosGeneralesLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Ecodigo)
                    .addComponent(Cod_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Erazonsocial)
                    .addComponent(Razon_Social, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Enombre)
                    .addComponent(Nombre_Comercial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TIpo_Dni, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(Etipo_dni, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Enumero)
                    .addComponent(Numero_Dni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Categoria_Iva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Etipo_iva))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Enumero_ingresos)
                    .addComponent(Ingresos_Brutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Cond_Venta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Econd_venta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(DatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Guardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        DatosClientes.addTab("GENERAL", DatosGenerales);

        Codigo_Postal.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Codigo_Postal.setText("CODIGO POSTAL");
        Codigo_Postal.setPreferredSize(new java.awt.Dimension(179, 24));

        Ecodigo_postal.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Telefono_Cliente.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Telefono_Cliente.setText("TELEFONO FIJO");
        Telefono_Cliente.setPreferredSize(new java.awt.Dimension(179, 24));

        Etelefono.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Celular.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Celular.setText("CELULAR");
        Celular.setPreferredSize(new java.awt.Dimension(179, 24));

        Enumero_celular.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Mail_Cliente.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Mail_Cliente.setText("MAIL");
        Mail_Cliente.setPreferredSize(new java.awt.Dimension(179, 24));

        Email.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Morosidad_Cliente.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Morosidad_Cliente.setText("MOROSIDAD");
        Morosidad_Cliente.setPreferredSize(new java.awt.Dimension(179, 24));

        Emorosidad.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        Limite_Credito.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Limite_Credito.setText("LIMITE DE CREDITO");

        Elimite_credito.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        Elimite_credito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Elimite_creditoActionPerformed(evt);
            }
        });

        Estado_Cliente.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Estado_Cliente.setText("ESTADO ");
        Estado_Cliente.setPreferredSize(new java.awt.Dimension(179, 24));

        Estado.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        Estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HABILITADO", "SUSPENDIDO", "CANCELADO" }));

        Guardar.setFont(new java.awt.Font("Bitstream Vera Serif", 1, 20)); // NOI18N
        Guardar.setText("GUARDAR");
        Guardar.setPreferredSize(new java.awt.Dimension(122, 36));
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Cancelar2.setFont(new java.awt.Font("Bitstream Vera Serif", 1, 20)); // NOI18N
        Cancelar2.setText("CANCELAR");
        Cancelar2.setPreferredSize(new java.awt.Dimension(122, 36));
        Cancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancelar2ActionPerformed(evt);
            }
        });

        direccion.setFont(new java.awt.Font("Bitstream Vera Serif", 0, 20)); // NOI18N
        direccion.setText("DIRECCION");
        direccion.setPreferredSize(new java.awt.Dimension(179, 24));

        Enomdireccion.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N

        javax.swing.GroupLayout DatosAdicionalesLayout = new javax.swing.GroupLayout(DatosAdicionales);
        DatosAdicionales.setLayout(DatosAdicionalesLayout);
        DatosAdicionalesLayout.setHorizontalGroup(
            DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosAdicionalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Limite_Credito, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(Mail_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Codigo_Postal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(direccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Telefono_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Celular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Morosidad_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Estado_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Enomdireccion)
                    .addGroup(DatosAdicionalesLayout.createSequentialGroup()
                        .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Enumero_celular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                .addComponent(Etelefono, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ecodigo_postal, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Emorosidad, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Elimite_credito, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(DatosAdicionalesLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(Cancelar2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        DatosAdicionalesLayout.setVerticalGroup(
            DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosAdicionalesLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Codigo_Postal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ecodigo_postal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Enomdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Etelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Telefono_Cliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Enumero_celular)
                    .addComponent(Celular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Email)
                    .addComponent(Mail_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Emorosidad)
                    .addComponent(Morosidad_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Elimite_credito)
                    .addComponent(Limite_Credito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Estado_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Estado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(DatosAdicionalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancelar2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        DatosClientes.addTab("ADICIONALES", DatosAdicionales);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(DatosClientes)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(DatosClientes)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * save client data
     *
     * @param evt
     */
    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        try {
            Conexion sc = new Conexion("org.postgresql.Driver", "jdbc:postgresql://127.0.0.1:5432/postgres", "root", DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/postgres", "postgres", "root"), "postgres");
            String query6 = "SELECT num_dni FROM facturacion.ven_cliente WHERE num_dni = '" + Enumero.getText() + "' AND cod_cliente != '" + Ecodigo.getText() + "'";
            Statement statement6 = sc.getConnectio().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); //LO QUE VA A RETONAR COMO RESULTADO DE LA CONSULTA ES UN CONJUNTO EL CUAL SE PUEDE LLEVAR EL CURSOS TANTO PARA ADELANTE COMO PARA ATRAS, , SINO SE PONE ESTE SOLO SE PUEDE MOVER EL CURSOR PARA ADELANTE Y NO NOS SIRVE POR LOS IF
            ResultSet res6 = statement6.executeQuery(query6);

            String query7 = "SELECT ing_brutos FROM facturacion.ven_cliente WHERE ing_brutos = '" + Enumero_ingresos.getText() + "' AND cod_cliente != '" + Ecodigo.getText() + "'";
            Statement statement7 = sc.getConnectio().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);  //LO QUE VA A RETONAR COMO RESULTADO DE LA CONSULTA ES UN CONJUNTO EL CUAL SE PUEDE LLEVAR EL CURSOS TANTO PARA ADELANTE COMO PARA ATRAS, SINO SE PONE ESTE SOLO SE PUEDE MOVER EL CURSOR PARA ADELANTE Y NO NOS SIRVE POR LOS IF
            ResultSet res7 = statement7.executeQuery(query7);

            /*
             * check number dni and number ing_brutos 
             */
            if (!res6.next() && !res7.next()) {
                try {
                    try {
                        String query8 = "UPDATE facturacion.ven_cliente SET razon_social = '" + Erazonsocial.getText() + "', nom_comercial = '" + Enombre.getText() + "', num_dni = '" + Enumero.getText() + "', ing_brutos = '" + Enumero_ingresos.getText() + "', direccion = '" + Enomdireccion.getText() + "',"
                                + "codigo_postal = '" + Integer.parseInt(Ecodigo_postal.getText()) + "', tel_fijo = '" + Etelefono.getText() + "', celular = '" + Enumero_celular.getText() + "', mail = '" + Email.getText() + "', morosidad = '" + Integer.parseInt(Emorosidad.getText()) + "', limite_credito = '" + Integer.parseInt(Elimite_credito.getText()) + "' WHERE cod_cliente = '" + Integer.parseInt(Ecodigo.getText()) + "'";
                        PreparedStatement statement8 = sc.getConnectio().prepareStatement(query8);
                        statement8.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    PantallaCliente nc = new PantallaCliente();
                    nc.setVisible(true);
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                res6.beforeFirst();
                res7.beforeFirst();
                /*
                 * not exists number ing_brutos
                 */
                if (res6.next() && !res7.next()) {
                    dniExistente dni = new dniExistente();
                    dni.setVisible(true);
                    return;
                } else {
                    res6.beforeFirst();
                    res7.beforeFirst();
                    /*
                     * not exists number dni 
                     */
                    if (!res6.next() && res7.next()) {
                        ing_brutosExistente ing = new ing_brutosExistente();
                        ing.setVisible(true);
                    } else {
                        /*
                         * exists number dni and number ing_brutos
                         */
                        dniExisANDIngExis e = new dniExisANDIngExis();
                        e.setVisible(true);
                    }
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarActionPerformed

    /**
     * cancel action
     *
     * @param evt
     */
    private void Cancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancelar2ActionPerformed
        try {
            PantallaCliente nc = new PantallaCliente();
            nc.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Cancelar2ActionPerformed

    /**
     * cancel action
     *
     * @param evt
     */
    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        try {
            PantallaCliente nc = new PantallaCliente();
            nc.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CancelarActionPerformed

    /**
     * save client data
     *
     * @param evt
     */
    private void Guardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Guardar1ActionPerformed
        try {
            Conexion sc = new Conexion("org.postgresql.Driver", "jdbc:postgresql://127.0.0.1:5432/postgres", "root", DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/postgres", "postgres", "root"), "postgres");
            String query6 = "SELECT num_dni FROM facturacion.ven_cliente WHERE num_dni = '" + Enumero.getText() + "' AND cod_cliente != '" + Ecodigo.getText() + "'";
            Statement statement6 = sc.getConnectio().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); //LO QUE VA A RETONAR COMO RESULTADO DE LA CONSULTA ES UN CONJUNTO EL CUAL SE PUEDE LLEVAR EL CURSOS TANTO PARA ADELANTE COMO PARA ATRAS, , SINO SE PONE ESTE SOLO SE PUEDE MOVER EL CURSOR PARA ADELANTE Y NO NOS SIRVE POR LOS IF
            ResultSet res6 = statement6.executeQuery(query6);

            String query7 = "SELECT ing_brutos FROM facturacion.ven_cliente WHERE ing_brutos = '" + Enumero_ingresos.getText() + "' AND cod_cliente != '" + Ecodigo.getText() + "'";
            Statement statement7 = sc.getConnectio().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);  //LO QUE VA A RETONAR COMO RESULTADO DE LA CONSULTA ES UN CONJUNTO EL CUAL SE PUEDE LLEVAR EL CURSOS TANTO PARA ADELANTE COMO PARA ATRAS, , SINO SE PONE ESTE SOLO SE PUEDE MOVER EL CURSOR PARA ADELANTE Y NO NOS SIRVE POR LOS IF
            ResultSet res7 = statement7.executeQuery(query7);

            String queryCod = "SELECT cod_postal FROM facturacion.Localidades WHERE cod_postal = '" + Ecodigo_postal.getText() + "'";
            Statement statementCod = sc.getConnectio().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet resCod = statementCod.executeQuery(queryCod);

            /*CASO EN EL QUE NO ESTE NI EL CLIENTE NI LOS INGRESOS BRUTOS CARGADOS*/
            if (!res6.next() && !res7.next() && resCod.next()) {
                try {
                    try {
                        String query8 = "UPDATE facturacion.ven_cliente SET razon_social = '" + Erazonsocial.getText() + "', nom_comercial = '" + Enombre.getText() + "', tipo_dni= '" + (String) Etipo_dni.getSelectedItem() + "', num_dni = '" + Enumero.getText() + "', cat_iva= '" + (String) Etipo_iva.getSelectedItem() + "', ing_brutos = '" + Enumero_ingresos.getText() + "', cond_venta= '" + (String) Econd_venta.getSelectedItem() + "', direccion = '" + Enomdireccion.getText() + "',"
                                + "codigo_postal = '" + Integer.parseInt(Ecodigo_postal.getText()) + "', tel_fijo = '" + Etelefono.getText() + "', celular = '" + Enumero_celular.getText() + "', mail = '" + Email.getText() + "', morosidad = '" + Integer.parseInt(Emorosidad.getText()) + "', limite_credito = '" + Integer.parseInt(Elimite_credito.getText()) + "', estado = '" + (String) Estado.getSelectedItem() + "' WHERE cod_cliente = '" + Integer.parseInt(Ecodigo.getText()) + "'";
                        PreparedStatement statement8 = sc.getConnectio().prepareStatement(query8);
                        statement8.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    PantallaCliente nc = new PantallaCliente();
                    nc.setVisible(true);
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                res6.beforeFirst();
                res7.beforeFirst();
                resCod.beforeFirst();
                /*CASO EN EL QUE EL CLEINTE ESTE CARGADO Y LOS INGRESOS BRUTOS NO*/
                if (res6.next() && !res7.next() && resCod.next()) {
                    dniExistente dni = new dniExistente();
                    dni.setVisible(true);
                } else {
                    res6.beforeFirst();
                    res7.beforeFirst();
                    resCod.beforeFirst();
                    /*CASO EN EL QUE EL CLIENTE NO ESTE CARGADO Y LOS INGRESOS BRUTOS SI*/
                    if (!res6.next() && res7.next() && resCod.next()) {
                        ing_brutosExistente ing = new ing_brutosExistente();
                        ing.setVisible(true);
                    } else {
                        res6.beforeFirst();
                        res7.beforeFirst();
                        resCod.beforeFirst();
                        if (res6.next() && res7.next() && resCod.next()) {
                            /*CASO EN EL QUE CLIENTE E INGRESOS BRUTOS ESTEN CARGADOS*/
                            dniExisANDIngExis e = new dniExisANDIngExis();
                            e.setVisible(true);
                        } else {
                            res6.beforeFirst();
                            res7.beforeFirst();
                            resCod.beforeFirst();
                            if (res6.next() && !res7.next() && !resCod.next()) {
                                //DNI EXISTENTE Y CODIGO POSTAL INEXISTENTE
                                dniExistente dni = new dniExistente();
                                dni.setVisible(true);
                                CiudadNoExistente ciu = new CiudadNoExistente();
                                ciu.setVisible(true);
                            } else {
                                res6.beforeFirst();
                                res7.beforeFirst();
                                resCod.beforeFirst();
                                if (!res6.next() && res7.next() && !resCod.next()) {
                                    //ING. BRUTOS EXISTENTE Y CODIGO POSTAL INEXISTENTE
                                    ing_brutosExistente ing = new ing_brutosExistente();
                                    ing.setVisible(true);
                                    CiudadNoExistente ciu = new CiudadNoExistente();
                                    ciu.setVisible(true);
                                } else {
                                    res6.beforeFirst();
                                    res7.beforeFirst();
                                    resCod.beforeFirst();

                                    if (!res6.next() && !res7.next() && !resCod.next()) {
                                        //CODIGO POSTAL INEXISTENTE
                                        CiudadNoExistente ciu = new CiudadNoExistente();
                                        ciu.setVisible(true);

                                    } else {
                                        //DNI E ING. BRUTOS EXISTENTES Y CODIGO POSTAL INEXISTENTE
                                        dniExisANDIngExis e = new dniExisANDIngExis();
                                        e.setVisible(true);
                                        CiudadNoExistente ciu = new CiudadNoExistente();
                                        ciu.setVisible(true);
                                    }
                                }
                            }
                        }
                    }
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Guardar1ActionPerformed

    private void Etipo_dniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Etipo_dniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Etipo_dniActionPerformed

    private void Elimite_creditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Elimite_creditoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Elimite_creditoActionPerformed

    private void Etipo_ivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Etipo_ivaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Etipo_ivaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new EditarCliente().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(EditarCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    public JTextField getECodigo() {
        return Ecodigo;
    }

    public JTextField getERazonSocial() {
        return Erazonsocial;
    }

    public JTextField getENombreComercial() {
        return Enombre;
    }

    public JTextField getEDireccion() {
        return Enomdireccion;
    }

    public JTextField getETel() {
        return Etelefono;
    }

    public JTextField getEMail() {
        return Email;
    }

    public JTextField getENumDni() {
        return Enumero;
    }

    public JTextField getEInBrutos() {
        return Enumero_ingresos;
    }

    public JTextField getECod_postal() {
        return Ecodigo_postal;
    }

    public JTextField getECelular() {
        return Enumero_celular;
    }

    public JTextField getEMorosidad() {
        return Emorosidad;
    }

    public JTextField getELim_credito() {
        return Elimite_credito;
    }

    public JComboBox getTipo_iva() {
        return Etipo_iva;
    }

    public JComboBox getTipo_dni() {
        return Etipo_dni;
    }

    public JComboBox getCond_venta() {
        return Econd_venta;
    }

    public JComboBox getEstado() {
        return Estado;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton Cancelar2;
    private javax.swing.JLabel Categoria_Iva;
    private javax.swing.JLabel Celular;
    private javax.swing.JLabel Cod_Cliente;
    private javax.swing.JLabel Codigo_Postal;
    private javax.swing.JLabel Cond_Venta;
    private javax.swing.JPanel DatosAdicionales;
    private javax.swing.JTabbedPane DatosClientes;
    private javax.swing.JPanel DatosGenerales;
    private javax.swing.JTextField Ecodigo;
    private javax.swing.JTextField Ecodigo_postal;
    private javax.swing.JComboBox<String> Econd_venta;
    private javax.swing.JTextField Elimite_credito;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Emorosidad;
    private javax.swing.JTextField Enombre;
    private javax.swing.JTextField Enomdireccion;
    private javax.swing.JTextField Enumero;
    private javax.swing.JTextField Enumero_celular;
    private javax.swing.JTextField Enumero_ingresos;
    private javax.swing.JTextField Erazonsocial;
    private javax.swing.JComboBox<String> Estado;
    private javax.swing.JLabel Estado_Cliente;
    private javax.swing.JTextField Etelefono;
    private javax.swing.JComboBox<String> Etipo_dni;
    private javax.swing.JComboBox<String> Etipo_iva;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Guardar1;
    private javax.swing.JLabel Ingresos_Brutos;
    private javax.swing.JLabel Limite_Credito;
    private javax.swing.JLabel Mail_Cliente;
    private javax.swing.JLabel Morosidad_Cliente;
    private javax.swing.JLabel Nombre_Comercial;
    private javax.swing.JLabel Numero_Dni;
    private javax.swing.JLabel Razon_Social;
    private javax.swing.JLabel TIpo_Dni;
    private javax.swing.JLabel Telefono_Cliente;
    private javax.swing.JLabel direccion;
    // End of variables declaration//GEN-END:variables
}
